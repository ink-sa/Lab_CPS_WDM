
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7E30EBD083F8AA3C6D0CF9A791E4E76C'
    
_lr_action_items = {'TIMEOUT':([5,17,],[8,-6,]),'AND':([38,],[40,]),'PARAM':([9,12,15,19,23,37,],[13,13,-9,-8,-7,-10,]),'NE':([24,40,41,],[32,32,32,]),'COLON':([14,21,],[22,24,]),'INTEGER':([6,11,13,22,28,29,30,31,32,33,34,36,42,43,],[10,18,21,26,-19,38,-16,-17,-15,-18,-14,26,44,45,]),'GE':([24,40,41,],[28,28,28,]),'STATEID':([0,2,3,7,16,20,35,],[1,-3,1,-2,-5,-4,-20,]),'NEXTSTATE':([9,12,15,19,23,37,],[14,14,-9,-8,-7,-10,]),'$end':([2,3,4,7,16,20,35,],[-3,-1,0,-2,-5,-4,-20,]),'OR':([38,],[41,]),'EQUALS':([1,8,24,40,41,],[6,11,34,34,34,]),'LT':([24,40,41,],[30,30,30,]),'LE':([24,40,41,],[31,31,31,]),'SEMI':([10,18,25,26,27,38,39,44,45,],[17,23,35,-22,37,-11,-21,-12,-13,]),'GT':([24,40,41,],[33,33,33,]),'COMMA':([26,],[36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([24,],[27,]),'compare':([24,40,41,],[29,42,43,]),'state':([0,3,],[2,7,]),'param_block':([9,],[12,]),'param':([9,12,],[15,19,]),'prog_body':([0,],[3,]),'program':([0,],[4,]),'state_id':([0,3,],[5,5,]),'numer':([22,36,],[25,39,]),'timeout':([5,],[9,]),'next_state':([9,12,],[16,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> prog_body','program',1,'p_program','wdm_parse.py',13),
  ('prog_body -> prog_body state','prog_body',2,'p_prog_body','wdm_parse.py',16),
  ('prog_body -> state','prog_body',1,'p_prog_body','wdm_parse.py',17),
  ('state -> state_id timeout param_block next_state','state',4,'p_state','wdm_parse.py',20),
  ('state -> state_id timeout next_state','state',3,'p_state','wdm_parse.py',21),
  ('state_id -> STATEID EQUALS INTEGER SEMI','state_id',4,'p_state_id','wdm_parse.py',24),
  ('timeout -> TIMEOUT EQUALS INTEGER SEMI','timeout',4,'p_timeout','wdm_parse.py',31),
  ('param_block -> param_block param','param_block',2,'p_param_block','wdm_parse.py',37),
  ('param_block -> param','param_block',1,'p_param_block','wdm_parse.py',38),
  ('param -> PARAM INTEGER COLON statement SEMI','param',5,'p_param','wdm_parse.py',41),
  ('statement -> compare INTEGER','statement',2,'p_statement','wdm_parse.py',54),
  ('statement -> compare INTEGER AND compare INTEGER','statement',5,'p_statement','wdm_parse.py',55),
  ('statement -> compare INTEGER OR compare INTEGER','statement',5,'p_statement','wdm_parse.py',56),
  ('compare -> EQUALS','compare',1,'p_compare','wdm_parse.py',67),
  ('compare -> NE','compare',1,'p_compare','wdm_parse.py',68),
  ('compare -> LT','compare',1,'p_compare','wdm_parse.py',69),
  ('compare -> LE','compare',1,'p_compare','wdm_parse.py',70),
  ('compare -> GT','compare',1,'p_compare','wdm_parse.py',71),
  ('compare -> GE','compare',1,'p_compare','wdm_parse.py',72),
  ('next_state -> NEXTSTATE COLON numer SEMI','next_state',4,'p_next_state','wdm_parse.py',87),
  ('numer -> INTEGER COMMA numer','numer',3,'p_numer','wdm_parse.py',102),
  ('numer -> INTEGER','numer',1,'p_numer','wdm_parse.py',103),
]
